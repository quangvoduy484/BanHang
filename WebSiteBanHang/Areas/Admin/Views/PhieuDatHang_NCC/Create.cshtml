@model WebSiteBanHang.Areas.Admin.ViewModels.PhieuDatHang_NCCViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout_admin.cshtml";
}
<head>
    <script src="~/scripts/moment.min.js"></script>

</head>
<style>
    .table-admin {
        border: 1px solid #ddd;
    }

        .table-admin td, .table-admin th {
            border: 1px solid #ddd !important;
        }

    .TieuDe p {
        font-family: initial;
        font-size: 35px;
        color: #00020c;
    }

    .TieuDe a {
        width: 50px;
    }

    h2 {
        text-align: center;
        color: #4169E1;
    }

    .Bang {
        background: none;
        border-top: none;
    }
</style>
<h2>LẬP PHIẾU ĐẶT HÀNG </h2>

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        if (ViewBag.Message != null)
        {
            @ViewBag.Message
        }*@
<form action="/Admin/PhieuDatHang_NCC/Create" method="post">
    @Html.AntiForgeryToken()
    <div class="col-md-12">
        <div class="box Bang">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.MaNCC, "Mã nhà cung cấp", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4" name="MaNCC">
                        @Html.DropDownList("MANCC", (IEnumerable<SelectListItem>)ViewBag.listNCC, htmlAttributes: new { @class = "form-control col-md-6" })
                        @Html.ValidationMessageFor(model => model.MaNCC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NgayDat, "Ngày đặt", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        <input type="datetime" value="@DateTime.Now" name="NgayDat" />
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TongTien, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2" name="TongTien">
                        @Html.EditorFor(model => model.TongTien, new { htmlAttributes = new { @class = "form-control tong-tien", @readonly = "readonly", @type = "number" } })
                        @Html.ValidationMessageFor(model => model.TongTien, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
        <div class="container">

            <div class="details">
                <h2>Danh sách sản phẩm</h2>
                <table class="table table-responsive" id="chiTietDH" name="CT_PHIEUDATHANGNCCs">
                    <tr>

                        <td>Tên Sản phẩm</td>
                        <th>Số lượng</th>
                        <th>Đơn giá</th>
                        <th>Thành tiền</th>
                        <th>Chức năng</th>
                    </tr>
                    <tr class="mycontainer" id="chiTiet_1">
                        <td name="MaSP">
                            @Html.DropDownList("MASANPHAM", (IEnumerable<SelectListItem>)ViewBag.listSP, htmlAttributes: new { @class = " form-control" })
                        </td>
                        <td>
                            <input type="number" id='sl_1' min="1" name="SL" onChange=changeSoLuong(this) class=" form-control" />
                        </td>
                        <td>
                            <input type="number" id='dg_1' name="GiaNhap" min="0" onChange=changeDonGia(this) class=" form-control" />
                        </td>
                        <td>
                            <input type="text" id='tt_1' class="thanh-tien form-control" name="ThanhTien" disabled onChange=changeThanhTien() readonly="readonly" />
                        </td>
                        <td>

                            <input type="button" value="X" class="btn btn-danger" onclick="remove(this)" />
                            <input type="button" value="Add" class="btn btn-primary" id="ThemSP" onclick="themChiTietDatHang()" />
                        </td>
                    </tr>
                </table>

                <div>

                    <input id="Create" onclick="save()" value="Xác nhận" class="col-md-offset-5 col-md-2 btn btn-warning " style="padding:10px 20px" />

                </div>

            </div>
        </div>
    </div>
</form>



<div>
    @Html.ActionLink("Back to List", "Index")


</div>
}
<script>

    function changeSoLuong(atr) {
         var sl = $(atr).val();
        var id = $(atr).attr('id').toString().split('_')[1];
        var dg = $('#dg_' + id).val();
        var thanhTien = dg * sl;
        $('#tt_' + id).val(thanhTien);


        changeThanhTien();
    }
    function changeDonGia(atr) {
        var donGia = $(atr).val();
        var id = $(atr).attr('id').toString().split('_')[1];
        var sl = $('#sl_' + id).val();
        var thanhTien = donGia * sl;
        $('#tt_' + id).val(thanhTien);

        changeThanhTien();

    }
    function changeThanhTien() {
        var sum = 0;
        var table = $('#chiTietDH')
        table.each(function () {
            $(this).find('tr').each(function () {
                var thanhTien = $(this).find('.thanh-tien').val();
                if (thanhTien) {
                    sum = parseInt(sum) + parseInt(thanhTien);
                }
            })
        })
        $('.tong-tien').val(sum);
    }
        function themChiTietDatHang() {
            var table = $('#chiTietDH tbody')
            var row = moment(new Date()).format('DDMMYYYYhhmmssms')
            var id = 'chiTiet_' + row;

            table.append(`
                @*<tr id="${id}" >
                            <th>@Html.DropDownList("MASANPHAM", (IEnumerable<SelectListItem>)ViewBag.listSP, htmlAttributes: new { @class = " form-control " ,style="width:90%"})</th>
                            <th > <input id= 'sl_${row}'  type="number" min="1" name="soLuong" onChange=changeSoLuong(this)  style="width:40%" /></th>
                            <th> <input id= 'dg_${row}'  type="number"  name="donGia" min = "0"  onChange=changeDonGia(this) style="width:60%"  /></th>
                            <th> <input id= 'tt_${row}' class="thanh-tien" type="text"  name="thanhTien" disabled onChange=changeThanhTien() style="width:80%" /></th>
                            <th><input type="button" value="X"  class="btn btn-danger" onclick="remove(this)"/>
                                 <input type="button" value="Thêm" class="btn btn-primary" id="ThemSP" onclick="themChiTietDatHang()" />
                        </th>
                        </tr>*@
                   <tr class="mycontainer" id="${id}">
                    <td>
                            @Html.DropDownList("MASANPHAM", (IEnumerable<SelectListItem>)ViewBag.listSP, htmlAttributes: new { @class = " form-control "})
                    </td>
                    <td>
                        <input type="number" id= 'sl_${row}'  type="number" min="1" name="soLuong" onChange=changeSoLuong(this) class=" form-control" />
                    </td>
                    <td>
                        <input type="number" id= 'dg_${row}'  type="number"  name="donGia" min = "0"  onChange=changeDonGia(this) class=" form-control" />
                    </td>
                    <td>
                        <input type="text" id= 'tt_${row}' class="thanh-tien form-control" type="text"  name="thanhTien" disabled onChange=changeThanhTien() readonly="readonly" />
                    </td>
                    <td>

                        <input type="button" value="X" class="btn btn-danger" onclick="remove(this)" />
                        <input type="button" value="Add" class="btn btn-primary" id="ThemSP" onclick="themChiTietDatHang()" />
                    </td>
                </tr>
            `)

        }
    function remove(tr) {
       var row = tr.parentNode.parentNode;
        row.parentNode.removeChild(row);
        changeThanhTien();
    }

    function save() {
        var chiTiets = new Array();
        $("#chiTietDH tbody TR").each(function () {
            var row = $(this);
            var chiTiet = {};
            chiTiet.MaSP = row.find("TD").eq(0).val();
            chiTiet.SL = row.find("TD").eq(1).val();
            chiTiet.donGia = row.find("TD").eq(2).val();
            chiTiet.thanhTien = row.find("TD").eq(3).val();

            if (chiTiet.MaSP && chiTiet.SL && chiTiet.donGia && chiTiet.thanhTien) {
                chiTiets.push(chiTiet);
            }
        });
    }
</script>

