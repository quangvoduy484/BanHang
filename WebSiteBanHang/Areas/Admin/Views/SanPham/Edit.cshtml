@model WebSiteBanHang.Areas.Admin.ViewModels.SanPhamViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout_admin.cshtml";
}
<head>
    <link href="~/scripts/dropzone/dropzone.min.css" rel="stylesheet" />
    <script src="~/scripts/dropzone/dropzone.min.js"></script>
</head>
<style>
    * {
        font-size: 14px;
    }

    label {
        font-weight: initial;
    }

    h4, h2 {
        margin-left: 15px;
        color: blue;
    }

    #dropzoneJsForm img {
        width: 120px;
        height: 120px;
    }

    .dz-progress {
        display: none;
    }

    .dropzone {
        border: 2px dashed #0087F7;
        border-radius: 5px;
        background: white;
    }

    div.dz-default.dz-message {
        display: none;
    }
</style>
<h2>CHỈNH SỬA</h2>

<form id="edit" name="edit">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Sản phẩm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaSanPham)
        <div class="col-md-12">
            <div style="padding: 0 10px">

                <div class="form-group">
                    @Html.LabelFor(model => model.TenSanPham, "Tên sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.TenSanPham, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TenSanPham, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MaLoai, "Loại sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("MaLoai", (IEnumerable<SelectListItem>)ViewBag.LoaiSP, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TenLoai, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.XuatXu, "Xuất xứ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.XuatXu, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.XuatXu, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SoLuongTon, "Số lượng tồn", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.SoLuongTon, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SoLuongTon, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DVT, "Đơn vị tính", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.DVT, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DVT, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MauSac, "Màu sắc", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.MauSac, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MauSac, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VatLieu, "Vật liệu", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.VatLieu, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VatLieu, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.KichThuoc, "Kích thước", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.KichThuoc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.KichThuoc, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.BaoHanh, "Bảo hành", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.BaoHanh, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BaoHanh, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HinhAnh, "Hình ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <div class="dropzone" id="dropzoneJsForm">
                            <div class="dz-default dz-message">
                                <span>Thả file vào đây để upload</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-6">
                        <input type="button" id="sb" onclick="editSP()" value="Save" class="btn btn-facebook" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("<< Quay lại danh sách", "Index")
</div>

<script>
    toastr.options = {
        "closeButton": true,
        "debug": false,
        "newestOnTop": false,
        "progressBar": false,
        "positionClass": "toast-top-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "2000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
    };
    var myDropzone = new Dropzone("div#dropzoneJsForm", {
        url: "/admin/sanpham/UpLoadImage",
        parallelUploads: 10,
        maxFileSize: 5,
        addRemoveLinks: true,
        autoProcessQueue: false,
        dictRemoveFile: 'Xóa ảnh',
        acceptedFiles: 'image/jpeg, image/jpg, image/png, image/gif',
        init: function () {
            var location = window.location.toString();
            var id = location.substring(location.lastIndexOf("/") + 1);
            $.getJSON("/Admin/SanPham/GetImages/" + id, function (data) {
                if (data) {
                    $.each(data, function (index, val) {
                        var mockFile = {
                            name: val.Name,
                            isPrimary: val.IsPrimary,
                            idHinhAnh: val.IdHinhAnh,
                            idSanPham: id,
                            existed : true,
                            size: 204000,
                            type: 'image/png'
                        }
                        myDropzone.options.addedfile.call(myDropzone, mockFile);
                        myDropzone.options.thumbnail.call(myDropzone, mockFile, val.Link);
                        mockFile.previewElement.classList.add('dz-success');
                        mockFile.previewElement.classList.add('dz-complete');

                    })
                }

            })
        },
        removedfile: function (file) {
            if (file.existed) {
                if (window.confirm("Bạn có muốn xóa hình này không?")) {
                    //xoa Image
                    var urlDelete = "/Admin/SanPham/DeleteImage/";
                    if (!file.isPrimary) {
                        urlDelete += "?idHinhAnh=" + file.idHinhAnh;
                    } else {
                        urlDelete += "?idSanPham=" + file.idSanPham;
                    }
                    $.post(urlDelete, function () {
                        file.previewElement.remove();
                    })
                }
            } else {
                file.previewElement.remove();
            }
        }
    });
    Dropzone.autoDiscover = false;
    function uploadFile(data) {
        var idSP = data;
        myDropzone.options.autoProcessQueue = true;
        myDropzone.on("sending",
            function (file, xhr, formData) {
                formData.append("id", idSP);
            });
        myDropzone.processQueue();
    }
    function editSP() {
        var dom = document.getElementById("edit");
        var formData = new FormData(dom);
        $("#sb").attr("disabled", true);

        uploadFile(@Model.MaSanPham);
        $.ajax({
            method: "POST",
            url: "/Admin/SanPham/Edit/" +@Model.MaSanPham,
            //contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: formData,
            processData: false,
            contentType: false,
            success: function (data) {
                toastr.success("Thêm thành công");
                window.location.href = "/Admin/SanPham"
            },
            error: function (jqXHR, textStatus, errorThrown) {
                toastr.error(errorThrown);
                $("#sb").attr("disabled", false);
            }
        });
    }
    function uploadFile(data) {
        var idSP = data;
        myDropzone.options.autoProcessQueue = true;
        myDropzone.on("sending",
            function (file, xhr, formData) {
                formData.append("id", idSP);
            });
        myDropzone.processQueue();
        myDropzone.options.autoProcessQueue = false;
    }
</script>
